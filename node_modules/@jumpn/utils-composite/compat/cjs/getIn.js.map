{"version":3,"file":"getIn.js","sources":["../../src/get.js","../../src/hasKey.js","../../src/getIn.js"],"sourcesContent":["// @flow\n\nimport {curry} from \"flow-static-land/lib/Fun\";\n\nimport type {Composite, Key} from \"./types\";\n\n/**\n * Get property value of given key.\n */\nconst get = (key: Key, composite: Composite): any => composite[(key: any)];\n\nexport default curry(get);\n","// @flow\n\nimport {curry} from \"flow-static-land/lib/Fun\";\n\nimport type {Composite, Key} from \"./types\";\n\n/**\n * Returns true if key is included in composite's own enumerable ones,\n * or false otherwise.\n */\nconst hasKey = (key: Key, composite: Composite): boolean =>\n  Object.prototype.hasOwnProperty.call(composite, key);\n\nexport default curry(hasKey);\n","// @flow\n\nimport {curry} from \"flow-static-land/lib/Fun\";\nimport {isLastIndex} from \"@jumpn/utils-array\";\n\nimport get from \"./get\";\nimport hasKey from \"./hasKey\";\n\nimport type {Composite, Path} from \"./types\";\n\nconst getInRecur = (index, path, composite) => {\n  if (isLastIndex(path, index)) return get(path[index], composite);\n\n  return hasKey(path[index], composite)\n    ? getInRecur(index + 1, path, get(path[index], composite))\n    : undefined;\n};\n\n/**\n * Returns value located at the given path or undefined otherwise.\n */\nconst getIn = (path: Path, composite: Composite): any =>\n  path.length === 0 ? undefined : getInRecur(0, path, composite);\n\nexport default curry(getIn);\n"],"names":["get","key","composite","curry","hasKey","Object","prototype","hasOwnProperty","call","getInRecur","index","path","isLastIndex","undefined","getIn","length"],"mappings":"oRASMA,IAAM,SAACC,EAAUC,uCAA8BA,EAAWD,uBAEjDE,UAAMH,oBCDfI,OAAS,SAACH,EAAUC,uCACxBG,OAAOC,UAAUC,eAAeC,KAAKN,EAAWD,0BAEnCE,UAAMC,qBCHfK,WAAa,SAACC,EAAOC,EAAMT,qCAC3BU,uBAAYD,EAAMD,GAAeV,MAAIW,EAAKD,GAAQR,GAE/CE,SAAOO,EAAKD,GAAQR,GACvBO,WAAWC,EAAQ,EAAGC,EAAMX,MAAIW,EAAKD,GAAQR,SAC7CW,gBAMAC,MAAQ,SAACH,EAAYT,qCACT,IAAhBS,EAAKI,YAAeF,EAAYJ,WAAW,EAAGE,EAAMT,yBAEvCC,UAAMW"}