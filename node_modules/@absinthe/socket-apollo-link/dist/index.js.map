{"version":3,"file":"index.js","sources":["../src/createAbsintheSocketLink.js"],"sourcesContent":["// @flow\n\nimport {ApolloLink} from \"apollo-link\";\nimport {cancel, send, toObservable} from \"@absinthe/socket\";\nimport {compose} from \"flow-static-land/lib/Fun\";\nimport {print} from \"graphql/language/printer\";\n\nimport type {\n  AbsintheSocket,\n  GqlRequest,\n  Observer\n} from \"@absinthe/socket/compat/cjs/types\";\nimport type {DocumentNode} from \"graphql/language/ast\";\n\ntype ApolloOperation<Variables> = {\n  query: DocumentNode,\n  variables: Variables\n};\n\nconst getRequest = <Variables: Object>({\n  query,\n  variables\n}: ApolloOperation<Variables>): GqlRequest<Variables> => ({\n  operation: print(query),\n  variables\n});\n\nconst notifierToObservable = (absintheSocket, onError, onStart) => notifier => {\n  let notifierStarted;\n  let unsubscribed = false;\n\n  return toObservable(absintheSocket, notifier, {\n    onError,\n    onStart: notifierLatest => {\n      notifierStarted = notifierLatest;\n\n      if (unsubscribed) {\n        cancel(absintheSocket, notifierStarted);\n      }\n\n      onStart && onStart(notifierLatest);\n    },\n    unsubscribe: () => {\n      unsubscribed = true;\n\n      if (notifierStarted) {\n        cancel(absintheSocket, notifierStarted);\n      }\n    }\n  });\n};\n\n/**\n * Creates a terminating ApolloLink to request operations using given\n * AbsintheSocket instance\n */\nconst createAbsintheSocketLink = (\n  absintheSocket: AbsintheSocket,\n  onError?: $PropertyType<Observer<*>, \"onError\">,\n  onStart?: $PropertyType<Observer<*>, \"onStart\">\n) =>\n  new ApolloLink(\n    compose(\n      notifierToObservable(absintheSocket, onError, onStart),\n      request => send(absintheSocket, request),\n      getRequest\n    )\n  );\n\nexport default createAbsintheSocketLink;\n"],"names":["getRequest","query","variables","print","notifierToObservable","absintheSocket","onError","onStart","notifierStarted","unsubscribed","toObservable","notifier","notifierLatest","createAbsintheSocketLink","ApolloLink","compose","send","request"],"mappings":"sQAmBMA,WAAa,gBACjBC,IAAAA,MACAC,IAAAA,uDAEWC,MAAMF,8BAIbG,qBAAuB,SAACC,EAAgBC,EAASC,qCAAY,2CAC7DC,SACAC,GAAe,SAEZC,aAAaL,EAAgBM,qBAEzB,yCACWC,EAEdH,UACKJ,EAAgBG,MAGdD,EAAQK,2BAER,yCACI,EAEXJ,UACKH,EAAgBG,2CAUzBK,yBAA2B,SAC/BR,EACAC,EACAC,qCAEA,IAAIO,WACFC,QACEX,qBAAqBC,EAAgBC,EAASC,GAC9C,8CAAWS,KAAKX,EAAgBY,eAChCjB"}