{"version":3,"file":"cancel.js","sources":["../src/notifier/find.js","../src/createPushHandler.js","../src/handlePush.js","../src/notifier/notify.js","../src/notifier/findIndex.js","../src/notifier/remove.js","../src/updateNotifiers.js","../src/cancel.js"],"sourcesContent":["// @flow\n\nimport {hasIn} from \"@jumpn/utils-composite\";\n\nimport type {Notifier} from \"../types\";\n\nconst find = (notifiers: Array<Notifier<any>>, key: string, value: any) =>\n  // $FlowFixMe: flow is having some troubles to match hasIn signature (curry)\n  notifiers.find(hasIn([key], value));\n\nexport default find;\n","// @flow\n\nimport {map} from \"@jumpn/utils-composite\";\n\nimport type {GqlRequest} from \"@jumpn/utils-graphql/compat/cjs/types\";\n\nimport notifierFind from \"./notifier/find\";\n\nimport type {AbsintheSocket, NotifierPushHandler, PushHandler} from \"./types\";\n\nconst createEventHandler = (absintheSocket, request) => handle => (...args) => {\n  const notifier = notifierFind(absintheSocket.notifiers, \"request\", request);\n\n  if (notifier) {\n    handle(absintheSocket, notifier, ...args);\n  }\n};\n\nconst createPushHandler = <Response: Object>(\n  notifierPushHandler: NotifierPushHandler<Response>,\n  absintheSocket: AbsintheSocket,\n  request: GqlRequest<any>\n): PushHandler<Response> =>\n  map(createEventHandler(absintheSocket, request), notifierPushHandler);\n\nexport default createPushHandler;\n","// @flow\n\nimport {Push} from \"phoenix\";\n\nimport type {PushHandler} from \"./types\";\n\nconst handlePush = (push: Push, handler: PushHandler<any>) =>\n  push\n    .receive(\"ok\", handler.onSucceed)\n    .receive(\"error\", handler.onError)\n    .receive(\"timeout\", handler.onTimeout);\n\nexport default handlePush;\n","// @flow\n\nimport type {Event, Notifier} from \"../types\";\n\nconst getNotifier = (handlerName, data) => observer =>\n  observer[handlerName] && observer[handlerName](data);\n\nconst getHandlerName = event => `on${event}`;\n\nconst notify = (notifier: Notifier<any>, event: Event, data: any) =>\n  notifier.observers.forEach(getNotifier(getHandlerName(event), data));\n\nexport default notify;\n","// @flow\n\nimport {hasIn} from \"@jumpn/utils-composite\";\n\nimport type {Notifier} from \"../types\";\n\nconst findIndex = (notifiers: Array<Notifier<any>>, key: string, value: any) =>\n  // $FlowFixMe: flow is having some troubles to match hasIn signature (curry)\n  notifiers.findIndex(hasIn([key], value));\n\nexport default findIndex;\n","// @flow\n\nimport {remove as arrayRemove} from \"@jumpn/utils-array\";\n\nimport findIndex from \"./findIndex\";\n\nimport type {Notifier} from \"../types\";\n\nconst remove = (notifier: Notifier<any>) => (notifiers: Array<Notifier<any>>) =>\n  arrayRemove(findIndex(notifiers, \"request\", notifier.request), 1, notifiers);\n\nexport default remove;\n","// @flow\n\nimport type {AbsintheSocket, Notifier} from \"./types\";\n\ntype Notifiers = Array<Notifier<any>>;\n\nconst updateNotifiers = (\n  absintheSocket: AbsintheSocket,\n  updater: (notifiers: Notifiers) => Notifiers\n) => {\n  absintheSocket.notifiers = updater(absintheSocket.notifiers);\n\n  return absintheSocket;\n};\n\nexport default updateNotifiers;\n","// @flow\n\nimport createPushHandler from \"./createPushHandler\";\nimport handlePush from \"./handlePush\";\nimport notifierNotify from \"./notifier/notify\";\nimport notifierRemove from \"./notifier/remove\";\nimport updateNotifiers from \"./updateNotifiers\";\n\nimport type {AbsintheSocket, Notifier, NotifierPushHandler} from \"./types\";\n\n// TODO: improve this type\ntype UnsubscribeResponse = {};\n\nconst removeNotifiers = (absintheSocket, notifier) => {\n  updateNotifiers(absintheSocket, notifierRemove(notifier));\n\n  notifierNotify(notifier, \"Cancel\", notifier);\n};\n\nconst onError = (absintheSocket, notifier, errorMessage) => {\n  // eslint-disable-next-line no-use-before-define\n  unsubscribe(absintheSocket, notifier);\n\n  notifierNotify(notifier, \"Error\", `unsubscribe: ${errorMessage}`);\n};\n\nconst onTimeout = (absintheSocket, notifier) =>\n  notifierNotify(notifier, \"Error\", \"unsubscribe: timeout\");\n\nconst notifierPushHandler: NotifierPushHandler<UnsubscribeResponse> = {\n  onError,\n  onTimeout,\n  onSucceed: removeNotifiers\n};\n\nconst unsubscribe = (absintheSocket, notifier) =>\n  handlePush(\n    absintheSocket.channel.push(\"unsubscribe\", {\n      subscriptionId: notifier.subscriptionId\n    }),\n    createPushHandler(notifierPushHandler, absintheSocket, notifier.request)\n  );\n\n/**\n * Cancels a notifier sending a Cancel event to all its observers and\n * unsubscribing in case it holds a subscription request\n *\n * @example\n * import * as AbsintheSocket from \"@absinthe/socket\";\n * \n * AbsintheSocket.cancel(absintheSocket, notifier);\n */\nconst cancel = (\n  absintheSocket: AbsintheSocket,\n  notifier: Notifier<any>\n): AbsintheSocket => {\n  if (notifier.operationType === \"subscription\") {\n    unsubscribe(absintheSocket, notifier);\n  } else {\n    removeNotifiers(absintheSocket, notifier);\n  }\n\n  return absintheSocket;\n};\n\nexport default cancel;\n"],"names":["find","notifiers","key","value","hasIn","createEventHandler","absintheSocket","request","args","notifier","notifierFind","createPushHandler","notifierPushHandler","map","handlePush","push","handler","receive","onSucceed","onError","onTimeout","getNotifier","handlerName","data","observer","getHandlerName","event","notify","observers","forEach","findIndex","remove","arrayRemove","updateNotifiers","updater","removeNotifiers","notifierRemove","errorMessage","notifierNotify","unsubscribe","channel","subscriptionId","cancel","operationType"],"mappings":"wLAMMA,KAAO,SAACC,EAAiCC,EAAaC,uCAE1DF,EAAUD,KAAKI,OAAOF,GAAMC,iCCExBE,mBAAqB,SAACC,EAAgBC,uCAAY,gDAAU,sCAAIC,0EAC9DC,EAAWC,KAAaJ,EAAeL,UAAW,UAAWM,GAE/DE,mBACKH,EAAgBG,UAAaD,0CAIlCG,kBAAoB,SACxBC,EACAN,EACAC,uCAEAM,IAAIR,mBAAmBC,EAAgBC,GAAUK,gCCjB7CE,WAAa,SAACC,EAAYC,uCAC9BD,EACGE,QAAQ,KAAMD,EAAQE,WACtBD,QAAQ,QAASD,EAAQG,SACzBF,QAAQ,UAAWD,EAAQI,wCCN1BC,YAAc,SAACC,EAAaC,uCAAS,gDACzCC,EAASF,IAAgBE,EAASF,GAAaC,6BAE3CE,eAAiB,4DAAcC,iBAE/BC,OAAS,SAAClB,EAAyBiB,EAAcH,uCACrDd,EAASmB,UAAUC,QAAQR,YAAYI,eAAeC,GAAQH,iCCJ1DO,UAAY,SAAC7B,EAAiCC,EAAaC,uCAE/DF,EAAU6B,UAAU1B,OAAOF,GAAMC,iCCA7B4B,SAAS,SAACtB,uCAA4B,SAACR,uCAC3C+B,OAAYF,UAAU7B,EAAW,UAAWQ,EAASF,SAAU,EAAGN,4CCH9DgC,gBAAkB,SACtB3B,EACA4B,yCAEejC,UAAYiC,EAAQ5B,EAAeL,WAE3CK,6BCCH6B,gBAAkB,SAAC7B,EAAgBG,8CACvBH,EAAgB8B,SAAe3B,WAEhCA,EAAU,SAAUA,iBAG/BU,QAAU,SAACb,EAAgBG,EAAU4B,0CAE7B/B,EAAgBG,UAEbA,EAAU,+BAAyB4B,kBAG9CjB,UAAY,SAACd,EAAgBG,qCACjC6B,OAAe7B,EAAU,QAAS,sCAE9BG,mEAGOuB,iBAGPI,YAAc,SAACjC,EAAgBG,qCACnCK,WACER,EAAekC,QAAQzB,KAAK,8BACVN,EAASgC,iBAE3B9B,kBAAkBC,oBAAqBN,EAAgBG,EAASF,wBAY9DmC,OAAS,SACbpC,EACAG,qCAE+B,iBAA3BA,EAASkC,0BACCrC,EAAgBG,mBAEZH,EAAgBG,GAG3BH"}