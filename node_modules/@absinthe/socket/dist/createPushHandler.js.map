{"version":3,"file":"createPushHandler.js","sources":["../src/notifier/find.js","../src/createPushHandler.js"],"sourcesContent":["// @flow\n\nimport {hasIn} from \"@jumpn/utils-composite\";\n\nimport type {Notifier} from \"../types\";\n\nconst find = (notifiers: Array<Notifier<any>>, key: string, value: any) =>\n  // $FlowFixMe: flow is having some troubles to match hasIn signature (curry)\n  notifiers.find(hasIn([key], value));\n\nexport default find;\n","// @flow\n\nimport {map} from \"@jumpn/utils-composite\";\n\nimport type {GqlRequest} from \"@jumpn/utils-graphql/compat/cjs/types\";\n\nimport notifierFind from \"./notifier/find\";\n\nimport type {AbsintheSocket, NotifierPushHandler, PushHandler} from \"./types\";\n\nconst createEventHandler = (absintheSocket, request) => handle => (...args) => {\n  const notifier = notifierFind(absintheSocket.notifiers, \"request\", request);\n\n  if (notifier) {\n    handle(absintheSocket, notifier, ...args);\n  }\n};\n\nconst createPushHandler = <Response: Object>(\n  notifierPushHandler: NotifierPushHandler<Response>,\n  absintheSocket: AbsintheSocket,\n  request: GqlRequest<any>\n): PushHandler<Response> =>\n  map(createEventHandler(absintheSocket, request), notifierPushHandler);\n\nexport default createPushHandler;\n"],"names":["find","notifiers","key","value","hasIn","createEventHandler","absintheSocket","request","args","notifier","notifierFind","createPushHandler","notifierPushHandler","map"],"mappings":"iIAMMA,KAAO,SAACC,EAAiCC,EAAaC,uCAE1DF,EAAUD,KAAKI,OAAOF,GAAMC,+BCExBE,mBAAqB,SAACC,EAAgBC,qCAAY,8CAAU,sCAAIC,wEAC9DC,EAAWC,KAAaJ,EAAeL,UAAW,UAAWM,GAE/DE,mBACKH,EAAgBG,UAAaD,0CAIlCG,kBAAoB,SACxBC,EACAN,EACAC,qCAEAM,IAAIR,mBAAmBC,EAAgBC,GAAUK"}